{{- if and (has .Values.global.ingressType (list "nginx" "kong")) (include "ingress-controller-ops.createAutoPatchResources" .) }}
kind: ConfigMap
metadata:
  name: envoy-sidecar
  namespace: {{ include "ingressController.namespace" . }}
apiVersion: v1
data:
  envoy.yaml: |
    admin:
      address:
        socket_address: { address: 127.0.0.1, port_value: 9901 }
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 127.0.0.1
            port_value: 10000
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: auto
              stat_prefix: ingress_http
              access_log: # configure logging
                - name: envoy.file_access_log
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: /dev/stdout
              route_config:
                name: security_engine_route # configure the localclus routes
                virtual_hosts:
                - name: imperva-security-engine-svc
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                      grpc: {}
                    route:
                      cluster: ext_proc
              http_filters:
              - name: envoy.filters.http.router # enable the Router filter
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
      - name: ext_proc
        connect_timeout: 5s
        type: strict_dns
        lb_policy: round_robin
        http2_protocol_options: { }
        {{- if eq "getAddrInfo" .Values.sidecar.dns.resolverType }}
        typed_dns_resolver_config:
          name: "dns_config"
          typed_config:
            "@type": "type.googleapis.com/envoy.extensions.network.dns_resolver.getaddrinfo.v3.GetAddrInfoDnsResolverConfig"
        {{- end }}
        load_assignment:
          cluster_name: ext_proc
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: imperva-security-engine-svc.{{ .Release.Namespace }}.svc.cluster.local
                        port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: imperva-security-engine-svc.{{ .Release.Namespace }}.svc.cluster.local
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/envoy/ca.crt
{{- end }}