artifactoryCredentials:
  name: apisecurity-credentials
  registry: imperva.jfrog.io
  username: ""
  password: ""

global:
  imageregistry: imperva.jfrog.io
  imagerepository: apisec-airgap
  apisecPublicRepo: apisec-public-beta
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477
  certificates:
    allowAnyCertificate: false # Allow any certificate to be used for the communication with the WAF Anywhere Cloud services
    certFilePath: "" # Path to the certificate file that will be used for the communication with the WAF Anywhere Cloud services. Leave empty to use the default certificates.
    secretCertName: "" # The name of the secret containing the certificate file, supplied by the customer. Must exist in the installation namespace before installation. Leave blank to use the default certificates.
  proxy: # Configuration for setting http_proxy, https_proxy, and no_proxy environment variables
    http: "" # Set the proxy that will be used to access URLs that use the HTTPS protocol. Leave empty if not needed.
    https: "" # Set the proxy that will be used to access URLs that use the HTTPS protocol. Leave empty if not needed.
    noProxy: "" # Set a comma-separated list of addresses to exclude from the proxy. Leave empty if not needed.

serviceAccount:
  create: true
  name: updatesecret

CronJob:
  enabled: true
  image: dockerpull:main-7-e08293

common_to_all_services:
  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


normalizer: 
  standalone: "true"
  
  streams:
    - general
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: normalizer
    tag: 0.0.1-master.602-05cf97
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    DEPLOYMENT_PROFILE: "ON-PREM"
    REDIS_PUBLISHER_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}'
    REDIS_CONSUMER_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}'
    REDIS_HEALTH_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}'
    PUBLISH_EVENTS_WITH_REQUEST_API_DESIGN_ISSUES: true
    PUBLISH_EVENTS_WITH_RESPONSE_API_DESIGN_ISSUES: true
  
    CONFIG_PUBLISHER_HOST: 'http://api-security-engine-cloud-connecter'
    CONFIG_POLL_FREQUENCY_MINS: 5
    NUM_CFG_DOWNLOADER: 10
    METRICS_SERVER_PORT: 8112
  
  initContainerEnv:
    REDIS_PROPS: '[{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}]'
  
  volumes:
    - name: tmp
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"


  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


receiver: 
  standalone: "true"
  
  streams:
    - general
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: receiver
    tag: 0.0.1-master.486-3449c3
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    RLOG_LOG_LEVEL: "INFO"
    DEPLOYMENT_PROFILE: "ON-PREM"
    METRICS_SLEEP_TIME: "2"
    RCVR_REDIS_PUBLISHER_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}'
    REDIS_HEALTH_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}'
  
  initContainerEnv:
    REDIS_PROPS: '[{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}]'
  
  volumes:
    - name: tmp
      emptyDir: {}
    - name: cert-volume-rcvr
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
    - mountPath: /etc/certs/
      name: cert-volume-rcvr
  
  certManager:
    enabled: false
  
  nodePort:
    enabled: true
    service:
      port: 80
      httpNodePort: 32111
      sslport: 443
      httpsNodePort: 32443
    labels:
      app.kubernetes.io/instance: receiver
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: receiver
    selectorLabels:
      app.kubernetes.io/instance: receiver
      app.kubernetes.io/name: receiver
  
  tlsCerts:
    enabled: true
    serviceName: api-security-engine-receiver
    duration: 3650
    altNames:
      - api-security-engine-receiver
    ca:
      name: imperva-ca
      validity: 3650
    secretName: receiver-tls-secret
  
  serviceAffinity:
    sessionAffinity: ClientIP # or None


  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


discovery-feature-extractor: 
  standalone: "true"
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: discovery-feature-extractor
    tag: 0.0.1-master.258-b12823
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    DEPLOYMENT_PROFILE: "ON-PREM"
    DFE_NORMALIZED_REDIS_INFO: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    DFE_EXTRACTED_REDIS_INFO: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    DFE_NORMALIZED_W_AUTH_REDIS_INFO: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_HEALTH_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    CONFIG_PUBLISHER_HOST: 'http://api-security-engine-cloud-connecter'
  
  initContainerEnv:
    REDIS_PROPS: '[{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}]'
  
  volumes:
    - name: tmp
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"


  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


appl-clf-engine: 
  standalone: "true"
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: appl-clf-engine
    tag: 0.0.1-master.424-b9b5a5
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    DEPLOYMENT_PROFILE: "ON-PREM"
    RCVR_REDIS_PUBLISHER_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_HEALTH_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    CONFIG_PUBLISHER_HOST: "http://api-security-engine-cloud-connecter"
  
  initContainerEnv:
    REDIS_PROPS: '[{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}]'
  
  volumes:
    - name: tmp
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"


  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


appl-filter: 
  standalone: "true"
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: appl-filter
    tag: 0.0.1-master.224-f8ea89
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    DEPLOYMENT_PROFILE: "ON-PREM"
    CLASSIFICATION_SVC_HOST: '{"host":"http://api-security-engine-appl-clf-engine", "port":"9000"}'
    REDIS_CACHE_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_RCVR_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_PUBLISHER_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_CONFIG_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_HEALTH_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    CONFIG_PUBLISHER_HOST: 'http://api-security-engine-cloud-connecter'
    CONFIG_PUBLISHER: 'true'
    CONFIG_POLL_FREQUENCY_MINS: 5
    SERVICE_AUTH_ENABLED: 'false'
  
  initContainerEnv:
    REDIS_PROPS: '[{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}]'
  
  volumes:
    - name: tmp
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"


  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


summarization-engine: 
  standalone: "true"
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: summarization-engine
    tag: 0.0.1-master.338-7c2730
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    DEPLOYMENT_PROFILE: "ON-PREM"
    DATA_PUBLISHER: REDIS
    REDIS_SERVER_ADDR: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_CACHE_ADDR: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_HEALTH_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    DISCOVERY_AGGREGATE_TIME: 60
    APPL_AGGREGATE_TIME: 120
    AUTH_AGGREGATE_TIME: 120
    PRIORITY_APPL_AGGREGATE_TIME: 60
    PRIORITY_AUTH_AGGREGATE_TIME: 120
    PRIORITY_DISCOVERY_AGGREGATE_TIME: 120
    PRIORITY_EVENT_ACCOUNT_IDS: ""
  
  initContainerEnv:
    REDIS_PROPS: '[{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}]'
  
  volumes:
    - name: tmp
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
  
  certManager:
    enabled: false
  
  healthChecks:
    enabled: false
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"


  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


cloud-connecter: 
  standalone: "true"
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: cloud-connecter
    tag: 0.0.1-master.51-4e238d
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    DEPLOYMENT_PROFILE: "ON-PREM"
    CLOUD_URL: http://onprem-receiver/
    REDIS_SERVER_ADDR: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_HEALTH_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
  
  initContainerEnv:
    REDIS_PROPS: '[{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}]'
  
  volumes:
    - name: tmp
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"


  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


bola-feature-extractor: 
  standalone: "true"
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: bola-feature-extractor
    tag: 0.0.1-master.153-a19ef3
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    DEPLOYMENT_PROFILE: "ON-PREM"
    PROCESS_PATH_PARAM: "true"
    REDIS_SERVER_ADDR: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_SERVER_CACHE_ADDR: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    PROMETHEUS_MULTIPROC_DIR: "/tmp/MULTIPROC_DIR_REPORTS"
  
  initContainerEnv:
    REDIS_PROPS: '[{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}]'
  
  volumes:
    - name: tmp
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
  
  certManager:
    enabled: false
  
  vaultPKISecret:
    enabled: false
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"


  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


apisec-controller-message-bus: 
  standalone: "true"
  fullnameOverride: "apisec-controller-message-bus"
  
  securityContext:
    readOnlyRootFilesystem: false
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: apisec-controller-message-bus
    tag: 0.0.1-main.19-7f5100
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    DEPLOYMENT_PROFILE: "ON-PREM"
  
  volumes:
    - name: tmp
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
  
  resources:
    requests:
      memory: "2560Mi"
      cpu: "500m"
    limits:
      memory: "3384Mi"
      cpu: "1000m"


  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


policy-downloader: 
  standalone: "true"
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: policy-downloader
    tag: 0.0.1-main.77-fcd801
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    RLOG_LOG_LEVEL: "INFO"
    DEPLOYMENT_PROFILE: "ON-PREM"
    METRICS_SERVER_PORT: 8112
    PROFILE: stage
    POLICY_DOWNLOADER_ENABLED: true
    # Redis
    REDIS_STORE_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_STREAM_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_HEALTH_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    #Server auth
    SERVER_AUTH_ENABLED: false
    #Client auth
    POLICY_DOWNLOADER_CLOUD_CONFIG_PUBLISHER_CLIENT_AUTH_ENABLED: false
    #Poll
    POLICY_DOWNLOADER_POLL_INTERVAL_IN_SECONDS: 60
    #Config publisher
    CLOUD_CONFIG_PUBLISHER_CLIENT_GET_URL: http://api-security-engine-cloud-connecter/v2/m2m/config/items/metadata
    CLOUD_CONFIG_PUBLISHER_VERIFY_CERTIFICATE: false
    POLICY_DOWNLOADER_CLOUD_CONFIG_PUBLISHER_QUERY_PARAMS: '{"configurationTypeList":"API_SEC_POLICY","page[number]":"0"}'
    CLOUD_CONFIG_PUBLISHER_ENABLE_METRICS: true
  
  initContainerEnv:
    REDIS_PROPS: '[{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}]'
  
  securityContext:
    readOnlyRootFilesystem: false
  
  volumes:
    - name: tmp
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
  
  replicaCount: 1
  equinix: false
  
  deployment:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: "metrics"
      prometheus.io/port: "8112"
    ports:
      - containerPort: 8080
        protocol: TCP
        name: "web"
      - containerPort: 9091
        protocol: TCP
        name: "tcp"
      - containerPort: 5300
        protocol: TCP
        name: "debug"
      - containerPort: 8112
        protocol: TCP
        name: "prometheus"


  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


policy-identifier: 
  standalone: "true"
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: policy-identifier
    tag: 0.0.1-main.73-2b43d1
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    DEPLOYMENT_PROFILE: "ON-PREM"
    POLICY_IDENTIFIER_ENABLED: true
    REDIS_STORE_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    NORMALIZER_REDIS_STREAM_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    POLICY_REDIS_STREAM_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_HEALTH_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    CLIENT_AUTH_ENABLED: false
    POLICY_DOWNLOADER_API_SERVER: "api-security-engine-policy-downloader"
    METRICS_SERVER_PORT: 8112
    RLOG_LOG_LEVEL: "INFO"
  
  initContainerEnv:
    REDIS_PROPS: '[{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}]'
  
  securityContext:
    readOnlyRootFilesystem: false
  
  volumes:
    - name: tmp
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
  
  replicaCount: 1
  equinix: false
  
  deployment:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: "metrics"
      prometheus.io/port: "8112"
    ports:
      - containerPort: 8080
        protocol: TCP
        name: "web"
      - containerPort: 9091
        protocol: TCP
        name: "tcp"
      - containerPort: 5300
        protocol: TCP
        name: "debug"
      - containerPort: 8112
        protocol: TCP
        name: "prometheus"

  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


bola-detection-engine: 
  standalone: "true"
  
  image:
    registry: imperva.jfrog.io/apisec-airgap-stage
    repository: bola-detection-engine
    tag: 0.0.1-main.109-0b512c
    pullPolicy: IfNotPresent
  
  imagePullSecrets:
    - name: apisecurity-credentials
  
  env:
    LOG_LEVEL: "INFO"
    DEPLOYMENT_PROFILE: "ON-PREM"
    BOLA_SUMMARY_PERIOD: 3600
    REDIS_SERVER_ADDR: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_SERVER_CACHE_ADDR: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_HEALTH_CONNECTION: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    REDIS_BOLA_BROKERS: '{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled": false}'
    EXPIRE_TIME: 28800
    PROMETHEUS_MULTIPROC_DIR: "/tmp/MULTIPROC_DIR_REPORTS"
  
  initContainerEnv:
    REDIS_PROPS: '[{"host":"apisec-controller-message-bus", "port":6379, "cred_source": "env", "is_tls_enabled":false}]'
  
  securityContext:
    readOnlyRootFilesystem: false
  
  volumes:
    - name: tmp
      emptyDir: {}
  
  volumeMounts:
    - mountPath: /tmp
      name: tmp
  
  certManager:
    enabled: false
  
  certManagerPCI:
    enabled: false
  
  equinix: false


  datadog: {}
  InitContainerInfraUtility:
    enabled: true
    image: apisec-infra-utility:0.0.1-main.4-eff477


