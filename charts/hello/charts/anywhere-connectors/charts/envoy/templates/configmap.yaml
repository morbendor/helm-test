{{- if eq "envoy" .Values.global.ingressType }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "envoy.fullname" . }}
data:
  envoy.yaml : |
            admin:
              access_log_path: /tmp/admin_access.log
              address:
                socket_address: { address: 0.0.0.0, port_value: 9901 }
            static_resources:
              listeners:
                - name: listener_0
                  address:
                    socket_address: { address: 0.0.0.0, port_value: 10000 }
                  filter_chains:
                    - filters:
                        - name: envoy.filters.network.http_connection_manager
                          typed_config:
                            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                            access_log:
                              - name: envoy.file_access_log
                                typed_config:
                                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                                  path: /dev/stdout
                                  json_format:
                                    session: "%REQ(X_COOKIE_USER_SESSION)%"
                                    oauth_client_id: "%REQ(X_COOKIE_OAUTH_CLIENT_ID)%"
                                    os_version: "%REQ(X_COOKIE_OS_VERSION)%"
                                    status: "%RESPONSE_CODE%"
                            stat_prefix: ingress_http
                            http_filters:
                              - name: envoy.filters.http.ext_proc
                                typed_config:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor
                                  failure_mode_allow: {{ .Values.global.failOpen }}
                                  message_timeout:
                                    seconds: 10
                                  processing_mode:
                                    request_body_mode: BUFFERED
                                    response_body_mode: BUFFERED
                                  grpc_service:
                                    envoy_grpc:
                                      cluster_name: ext_proc
                              - name: envoy.filters.http.router
                                typed_config:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

                            route_config:
                              name: local_route
                              virtual_hosts:
                                - name: local_service
                                  domains: ["*"]
                                  routes:
                                    - match:
                                        prefix: "/"
                                      route: { cluster: webserver-cluster }

              clusters:
                - name: webserver-cluster
                  connect_timeout: 0.25s
                  type: STRICT_DNS
                  lb_policy: ROUND_ROBIN
                  load_assignment:
                    cluster_name: webserver-cluster
                    endpoints:
                      - lb_endpoints:
                          - endpoint:
                              address:
                                socket_address:
                                  address: {{ .Values.destinationServiceAddress }} # Destination service which will be protected
                                  port_value: {{ .Values.destinationServicePort }} # Destination service port which will be protected
                - name: ext_proc
                  connect_timeout: 5s
                  type: strict_dns
                  lb_policy: round_robin
                  http2_protocol_options: { }
                  load_assignment:
                    cluster_name: ext_proc
                    endpoints:
                      - lb_endpoints:
                          - endpoint:
                              address:
                                socket_address:
                                  address: {{ .Values.securityEngineServiceName }}.{{.Release.Namespace}}.svc.cluster.local
                                  port_value: {{ .Values.securityEngineServicePort }}
                  transport_socket:
                    name: envoy.transport_sockets.tls
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
                      sni: {{ .Values.securityEngineServiceName }}.{{.Release.Namespace}}.svc.cluster.local
                      common_tls_context:
                        validation_context:
                          trusted_ca:
                            filename: /etc/envoy/ca.crt
{{- end }}