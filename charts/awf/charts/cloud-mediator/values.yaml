# Default values for cloud-mediator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  gradualCfgRollout:
    enabled: false # Enable gradual configuration rollout, adds a configuration validation pod before applying the configuration to the security engine.
    sandboxesSetup: 1 # Number of sandbox pods to set up for the security engine if gradual configuration rollout is enabled, default is 1

replicaCount: 1

image:
  repository: imperva-anywhere-docker/cloud-mediator
  pullPolicy: IfNotPresent
  tag: "v193"
  tagSuffix: ""
  digest: "" # image digest to use, takes precedence over tag if specified

# Auxiliary images to support the main application
auxImages:
  fluentBit:
    # Container that'll be used for log shipping, running as a sidecar (3rd Party)
    repository: imperva-waf-anywhere-beta-docker/aux/fluent-bit
    pullPolicy: IfNotPresent
    tag: 4.0.9
    tagSuffix: ""
    digest: "" # image digest to use, takes precedence over tag if specified

imagePullSecrets:
  - name: waf-anywhere-artifactory
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

log:
  appLogFilePath: /var/log/cloud_mediator.log
  componentLogFilePath: /var/log/component_status.log
  performanceLogFilePath: /var/log/performance_mediator.log
  maxLogSize: 5    #Max log size in MB before rotation
  maxLogBackups: 2 #Max number of log backups to keep
  maxLogAge: 1     #Max number of days to retain old log files

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8443

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


resources:
   limits:
     cpu: 512m
     memory: 1024Mi
   requests:
     cpu: 512m
     memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

securityEngine:
  name: 'security-engine'

## Cloud Mediator data Persistent Volume Storage Class.
## Used for storing user's specific PB configuration files on the PV, making the deployment highly more durable during pod failures and loss of connection to the cloud.
## Also reduces downtime of being fully protected during upgrades.
persistence:
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass:
  enabled: false
  capacity: 350Mi
  claimName: imperva-cm-data-pv-claim
  mountPath: /mnt/imperva/cloud-native/
  accessMode: ReadWriteOnce # RWO mode is required for the PV to be mounted on a single pod.

fluentbit:
  enabled: true
  collectAndSendLogs: true
  total_log_storage: 5M

network:
  requestTimeout: "" # Timeout in seconds for the network requests, default is 10 seconds

anywhere-commons:
  enabled: false