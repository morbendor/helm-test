apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloud-mediator.fullname" . }}
  labels:
    {{- include "cloud-mediator.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cloud-mediator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        helm.sh/revision: {{ .Release.Revision | quote }}
        {{- include "cloud-mediator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cloud-mediator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: imperva-user-data
          {{- if .Values.persistence.enabled}}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.claimName }}-{{ .Release.Namespace }}
          {{else}}
          emptyDir: {}
          {{end}}
        - name: imperva-auth-secrets
          secret:
            secretName: imperva-auth
            defaultMode: 0400
        - name: cloud-mediator-certs-{{.Release.Namespace}}
          secret:
            secretName: "{{ include "anywhere-commons.get-cloud-mediator-tls-secret-name" . }}"
            defaultMode: 0400
        - name: security-engine-certs-{{.Release.Namespace}}
          secret:
            secretName: "{{ include "anywhere-commons.get-security-engine-tls-secret-name" . }}"
            defaultMode: 0400
        {{- if .Values.fluentbit.enabled }}
        - name: fluent-bit-config-mediator
          configMap:
            name: fluent-bit-config-mediator
        {{- end }}
        - name: varlog
          emptyDir: {}
      {{- include "volume-customer-cert-creation" . | indent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "image-path" (dict "root" .Values "image" .Values.image) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: IMPERVA_INSTANCE_ID
              valueFrom:
                configMapKeyRef:
                  key: instanceId
                  name: shared-config
            - name: IMPERVA_MEDIATOR_POD_NAMESPACE
              value: {{.Release.Namespace}}
            - name: IMPERVA_SECURITY_ENGINE_NAME
              value: {{.Values.securityEngine.name}}
            - name: GRADUAL_ROLLOUT
              value: {{ .Values.global.gradualCfgRollout.enabled | quote }}
            - name: SANBOXES_SETUP
              value: {{ .Values.global.gradualCfgRollout.sandboxesSetup | quote }}
            - name: LOCAL_STORAGE_PATH
              value: {{ .Values.persistence.mountPath }}
            - name: PROFILE
              value: {{.Values.global.env}}
            - name: LOG_MAX_SIZE_MB
              value: "{{ .Values.log.maxLogSize }}"
            - name: LOG_MAX_BACKUPS
              value: "{{ .Values.log.maxLogBackups }}"
            - name: LOG_MAX_AGE_DAYS
              value: "{{ .Values.log.maxLogAge }}"
            - name: LOG_FILE_PATH
              value: {{ .Values.log.appLogFilePath }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: DEBUG
              value: "{{.Values.global.debug}}"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVER_PORT
              value: "{{ .Values.service.port }}"
            - name: KUBERNETES_PROBE_SERVER_PORT
              value: "8445"
            - name: MEM_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: {{ .Chart.Name }}
                  resource: limits.memory
            - name: CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: {{ .Chart.Name }}
                  resource: limits.cpu
            - name: MEM_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: {{ .Chart.Name }}
                  resource: requests.memory
            - name: CPU_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: {{ .Chart.Name }}
                  resource: requests.cpu
            - name: INGRESS_TYPE
              valueFrom:
                configMapKeyRef:
                  key: ingressType
                  name: shared-config
            - name: IMPERVA_CHART_VERSION
              valueFrom:
                configMapKeyRef:
                  key: chartVersion
                  name: shared-config
            - name: IMPERVA_CONTROLLER_PACKAGE_KEY
              valueFrom:
                configMapKeyRef:
                  key: controllerPackageKey
                  name: shared-config
            - name: CLIENT_REQUESTS_TIMEOUT_SECONDS
              value: "{{ .Values.network.requestTimeout }}"
          {{ include "global-env-vars" . | nindent 12 }}
          volumeMounts:
            - mountPath: "/etc/imperva-auth"
              name: imperva-auth-secrets
              readOnly: true
            - mountPath: {{ .Values.persistence.mountPath }}
              name: imperva-user-data
            - mountPath: "/etc/certs/cloud-mediator"
              name: cloud-mediator-certs-{{.Release.Namespace}}
              readOnly: true
            - mountPath: "/etc/certs/security-engine"
              name: security-engine-certs-{{.Release.Namespace}}
              readOnly: true
            - name: varlog
              mountPath: /var/log
          {{- include "volume-mount-customer-cert-creation" . | indent 12 }}
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: health
              containerPort: 8445
              protocol: TCP
           # The health scripts (liveness, readiness) are part of the CM image.
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8445
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8445
            initialDelaySeconds: 45
            periodSeconds: 10
            failureThreshold: 5
        {{- if .Values.fluentbit.enabled }}
        - name: fbit
          image: "{{ include "image-path" (dict "root" .Values "image" .Values.auxImages.fluentBit) }}"
          volumeMounts:
            - name: fluent-bit-config-mediator
              mountPath: /fluent-bit/etc/
              readOnly: true
            - name: varlog
              mountPath: /var/log
            - name: cloud-mediator-certs-{{.Release.Namespace}}
              mountPath: "/etc/certs/cloud-mediator"
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}