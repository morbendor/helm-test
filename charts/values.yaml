global:
  env: prod
  debug: true
  failOpen: true # value which enables the traffic if LSE pod is unavailable (default is true, traffic allowed)
  registry: imperva.jfrog.io # Registry for the images, will be used throughout the charts
  certificates:
    allowAnyCertificate: false # Allow any certificate to be used for the communication with the WAF Anywhere Cloud services
    certFilePath: "" # Path to the certificate file that will be used for the communication with the WAF Anywhere Cloud services. Leave empty to use the default certificates.
    secretCertName: "" # The name of the secret containing the certificate file, supplied by the customer. Must exist in the installation namespace before installation. Leave blank to use the default certificates.
  proxy:
    # Configuration for setting http_proxy, https_proxy, and no_proxy environment variables
    https: "" # Set the proxy that will be used to access URLs that use the HTTP protocol. Leave empty if not needed.
    noProxy: "" # Set a comma-separated list of addresses to exclude from the proxy. Leave empty if not needed.

  caCertificate: ""
  caKey: ""
  tls:
    existingSecret: "" # Name of the existing secret containing the TLS certificate and key, if not provided a new secret will be generated with the CA (self signed if caCertificate and caKey are not provided)
  registryCredentials:
    username: ""
    password: ""
  defaults: {}

  autoInstall:
    restartIngressControllerDeployment: true # Restarting the IC deployment, useful for making sure projected volumes on the pod are up-to-d
    autoPatchIngressControllerResources: true # Automatically patch the IC required resources (Deployment)


# Tags for the anywhere products. Will dictate what subcharts are installed in the dependency chart.
tags:
  waap: false
  waf: true
  apisecurity: ""




# Specs of the images that are not part of sub-charts
auxImages:
  updateImagePullSecrets:
    # Container that'll be used for  updating the image pull secrets, only relevant when the registry is defined as "imperva.jfrog.io"
    repository: imperva-waf-anywhere-beta-docker/aux/update-image-pull-secrets
    pullPolicy: IfNotPresent
    tag: v25
    tagSuffix: ""
    digest: "" # image digest to use, takes precedence over tag if specified
  checkPrerequisites:
    # Container that'll be used for verify prerequisites, only relevant when the registry is defined as "imperva.jfrog.io"
    repository: imperva-waf-anywhere-beta-docker/aux/check-prerequisites
    pullPolicy: IfNotPresent
    tag: v5
    tagSuffix: ""
    digest: "" # image digest to use, takes precedence over tag if specified


network:
  requestTimeout: 10


jobs:
  checkPrerequisites: false  # Enabling the check-prerequisites pre-install hook will verify the prerequisites for the installation
  updateImagePullSecrets:
    cron: "*/30 * * * *" # Cron expression for running every 30 minutes


auth:
  instanceName: "" # Name of the instance that will be installed, if not supplied a random generated name will be used ("WAF-Anywhere-<randomNum>")
  controllerPackageKey: "" # The key used to identify the controller package, has to be in accordance with the token
  impervaCredentials:
    controllerPackageToken: "" # Secret token for the controller package
