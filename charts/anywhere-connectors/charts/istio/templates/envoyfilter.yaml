{{- if and (eq "istio" .Values.global.ingressType) (include "ingressController.namespaceExists" .) -}}
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {{ .Values.envoyFilterName }}
  namespace: {{ include "ingressController.namespace" . }}
spec:
  workloadSelector:
    labels:
      istio: {{ .Values.istioController }} # use istio default controller
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
            subFilter:
              name: "envoy.filters.http.router"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.ext_proc
        typed_config:
          "@type": type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: "type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor"
          value:
            failure_mode_allow: {{ .Values.global.failOpen }} # FailOpen true/false option. Applied when LSE pod is not available and Istio needs to redirect the traffic to webserver or not.
            message_timeout:
              seconds: 10
            processing_mode:
              request_body_mode: BUFFERED
              response_body_mode: BUFFERED
            grpc_service:
              timeout:
                seconds: 10
              envoy_grpc:
                cluster_name: ext_proc
  - applyTo: CLUSTER
    patch:
      operation: ADD
      value:
        name: ext_proc
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: { }
        {{- if eq "getAddrInfo" .Values.dns.resolverType }}
        typed_dns_resolver_config:
          name: "dns_config"
          typed_config:
            "@type": "type.googleapis.com/envoy.extensions.network.dns_resolver.getaddrinfo.v3.GetAddrInfoDnsResolverConfig"
        {{- end }}
        load_assignment:
          cluster_name: ext_proc
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: {{ .Values.securityEngineServiceName }}.{{.Release.Namespace}}.svc.cluster.local
                        port_value: {{ .Values.securityEngineServicePort }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: {{ .Values.securityEngineServiceName }}.{{.Release.Namespace}}.svc.cluster.local
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: {{ .Values.rootCertPath }} # path to the security-engine root certificate deployed on Istio Ingress controller
{{- end -}}