{{- range $streamName:=.Values.streams }}
{{- with $ -}}
{{- $serviceSuffix := "" }}
  {{- if ne $streamName "general" }}
    {{- $serviceSuffix = printf "-%s" $streamName }}
  {{- end }}
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: {{ template "receiver.fullname" . }}{{$serviceSuffix}}
  labels:
    app: {{ template "receiver.name" . }}{{$serviceSuffix}}
    chart: {{ template "receiver.chart" . }}{{$serviceSuffix}}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    tags.datadoghq.com/env: {{ .Release.Namespace }}
    tags.datadoghq.com/service: {{ template "receiver.name" . }}{{$serviceSuffix}}
    tags.datadoghq.com/version:  {{ template "receiver.version" . }}
spec:
  strategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
  {{ if (kindIs "float64" .Values.replicaCount) }} 
  replicas: {{ .Values.replicaCount }}
  {{- else }} 
  replicas: {{ get .Values.replicaCount $streamName }}
  {{- end }}

  minReadySeconds: {{ .Values.minReadySeconds }}
  selector:
    matchLabels:
      app: {{ template "receiver.name" . }}{{$serviceSuffix}}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "receiver.name" . }}{{$serviceSuffix}}
        release: {{ .Release.Name }}
      annotations:
{{ toYaml .Values.deployment.annotations | indent 8 }}
    spec:
      {{ if eq (default "" .Values.standalone | toString) "true" }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}

      {{- range $name, $value := .Values.env }}
        {{- if eq "REGION" $name }}
          {{- if contains "eks" $value }}
      serviceAccountName: {{ template "receiver.fullname" . }}
      automountServiceAccountToken: true
          {{- end }}
        {{- end }}
      {{- end }}
      {{ if eq (default "" .Values.standalone | toString) "true" }}
      initContainers:
        - name: cert-container
          image: {{ .Values.global.imageregistry }}/{{ .Values.global.imagerepository }}/localcert:generic
          command: ["cp",  "-R",  "/etc/certs/localbay",  "/cert"]
          volumeMounts:
            - mountPath: /cert
              name: cert-volume-rcvr
        - name: apisec-infra-utility
          image: {{ .Values.global.imageregistry }}/{{ .Values.global.imagerepository }}/{{ .Values.global.InitContainerInfraUtility.image }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.initContainerEnv }}
          env:
          {{- range $k, $v := .Values.initContainerEnv }}
            - name: {{ $k }}
              value: {{ $v | quote }}
          {{- end }}
          {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ template "receiver.imageregistry" . }}/{{ .Values.image.repository }}:{{ template "receiver.imagetag" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
{{ toYaml .Values.deployment.ports | indent 10 }}
    {{- if .Values.env }}
          env:
        {{- $streamEnv := get $.Values.env $streamName }}
        {{- range $k, $v := $.Values.env }}
          {{- if not (kindIs "map" $v) }}
            {{- if and $streamEnv (kindIs "map" $streamEnv) (hasKey $streamEnv $k) }}
              - name: {{ $k }}
                value: {{ get $streamEnv $k | quote }}
            {{- else }}
              - name: {{ $k }}
                value: {{ $v | quote }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if and $streamEnv (kindIs "map" $streamEnv) }}
          {{- range $sk, $sv := $streamEnv }}
            {{- if not (hasKey $.Values.env $sk) }}
              - name: {{ $sk }}
                value: {{ $sv | quote }}
            {{- end }}
          {{- end }}
        {{- end }}
    {{- end }}
            {{ if eq (default "" .Values.standalone | toString) "true" }}
              - name: CONTROLLER_ID
                valueFrom:
                  secretKeyRef:
                    name: controller-secret
                    key: controller-id
              - name: CONTROLLER_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: controller-secret
                    key:  controller-token
              - name: CONTROLLER_INSTANCE
                valueFrom:
                  secretKeyRef:
                    name: controller-secret
                    key: controller-instance
              - name: ACCOUNT_ID
                valueFrom:
                  secretKeyRef:
                    name: controller-secret
                    key: account-id
            {{- end }}
              - name: DD_AGENT_HOST
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
              - name: DD_ENV
                value: {{ .Release.Namespace }}
              - name: DD_SERVICE
                value: {{ template "receiver.name" . }}
              - name: DD_VERSION
                value:  {{ template "receiver.version" . }}
              - name: DD_PROFILING_ENABLED
                value: "true"
              - name: DD_LOGS_INJECTION
                value: "true"
              - name: DD_TRACE_SAMPLE_RATE
                value: "1"
              - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
                value: 'true'
              - name: DD_RUNTIME_METRICS_ENABLED
                value: "true"
              - name: DD_JMXFETCH_ENABLED
                value: "true"
{{ if .Values.healthChecks.enabled }}
{{ (unset .Values.healthChecks "enabled") | toYaml | indent 10 }}
{{ end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          securityContext:
{{ toYaml .Values.securityContext | indent 12 }}  
          volumeMounts:
{{ toYaml .Values.volumeMounts | indent 12 }}
{{ if eq (default "" .Values.standalone | toString) "true" }}
            - mountPath: /etc/ssl/apisec_reciever/certs
              name: apisec-reciever-tls-certs
              readOnly: true
{{- end }}

    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
{{ toYaml .Values.volumes | indent 8 }}
{{ if eq (default "" .Values.standalone | toString) "true" }}
        - name: apisec-reciever-tls-certs
          secret:
            secretName: receiver-tls-secret
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
{{- end }}
{{- end }}
---
{{- end }}